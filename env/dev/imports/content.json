[
  {
    "text": "<h1 class=\"mv-h1\">Routing tutorial</h1>\n\n<p class=\"mv-p\">\n\n    When Mvcjs starts processing a requested URL, the first step it takes is to parse the URL into a route\n    The route is then used to instantiate the corresponding controller action to handle the request.\n    This whole process is called routing.\n</p>\n\n<h2 class=\"mv-h2\">Routes</h2>\n\n<p class=\"mv-p\">\n    End users address actions through the so-called routes. A route is a string that consists of the following\n    parts: <br/>\n<ul class=\"mv-ul\">\n    <li> a controller ID: a string that uniquely identifies the controller among all controllers within the same\n        application (or the same module if the controller belongs to a module);\n    </li>\n    <li> an action ID: a string that uniquely identifies the action among all actions within the same\n        controller.\n    </li>\n</ul>\n<br/>\nRoutes take the following format:\n<span class=\"mv-command\">ControllerID/ActionID</span>\n\n</p>\n\n<h2 class=\"mv-h2\">Static routes</h2>\n<p>\n    All routes are executed in order as thy are defined!\n</p>\n<code class=\"language-javascript\">\n    router.add([\n        {\n            pattern: 'user/&lt;view:(\\\\d+)&gt;', // matches /user/1, /user/2\n            route: 'user/view' // controller user action view\n        },\n        {\n            pattern: 'home/&lt;action&gt;', // matches /home/index /home/contact\n            route: 'home/&lt;action&gt;' // controller home action any\n        },\n        {\n            pattern: 'contact', // matches /contact\n            route: 'home/contact' // controller home action contact\n        },\n        {\n            pattern: '&lt;controller&gt;/&lt;action&gt;', // matches /home/index /user/index /user/view\n            route: '&lt;controller&gt;/&lt;action&gt;' // controller any action any\n        },\n        {\n            pattern: 'user/&lt;action:(create|view|update|delete)&gt;', // matches /user/create /user/view /user/update /user/delete\n            route: 'user/&lt;action&gt;' // controller user action (create|view|update|delete)\n        },\n        {\n            pattern: 'user/&lt;action:(update|view|delete)&gt;/&lt;id:(\\\\d+)&gt;', // matches /user/update/5 /user/view/10 /user/delete/1000\n            route: 'user/&lt;action&gt;' // controller user action (update|view|delete)\n        }\n    ]);\n\n    router.add({\n        pattern: '/', // matches /\n        route: 'home/index' // controller home action index\n    });\n</code>\n<h2 class=\"mv-h2\">Dynamic routes</h2>\n<code class=\"language-javascript\">\n    router.add([\n        {\n            dynamic: true,\n            constructor: di.load('@{envPath}/dynamic-router')\n        }\n    ]);\n    router.add({\n        pattern: '/', // matches /\n        route: 'home/index' // controller home action index\n    });\n</code>\n<p>Dynamic router:</p>\n<code class=\"language-javascript\">\n    var di = require('mvcjs'),\n    RouteRuleInterface = di.load('interface/routeRule'),\n    menuModel = di.load('@{modelsPath}/menu'),\n    Promise = di.load('promise'),\n    MenuRoute;\n\n    MenuRoute = RouteRuleInterface.inherit({}, {\n        parseRequest: function(method, route) {\n            return new Promise(function (resolve, reject) {\n                menuModel.findOne({link: route.pathname}, function(err, data) {\n                    if (!!data && !!data.route) {\n                        resolve([data.route, route.query]); // route must be returned as array format ['home/index', {id: 1}] string, object params\n                    }else {\n                        resolve(false);\n                    }\n                });\n            });\n        },\n        createUrl: function(route, params) {\n            if (route === 'custom/route') { // match route\n                if (params.link) {\n                    return params.link; // return custom link from params\n                }\n            }\n            return false;\n            /*\n                Eg:\n                {\n                    \"title\": \"Routing\",\n                    \"link\": \"/getting-started/routing\",\n                    \"route\": \"custom/route\", // controller custom action route\n                    \"blank\": false\n                }\n            */\n        }\n    });\n\n    module.exports = MenuRoute;\n</code>",
    "url": "/getting-started/routing"
  }
]